import Foundation

final class QuestionFactory: QuestionFactoryProtocol {
    private let questions: [QuizQuestion] = [
        QuizQuestion(image: "The_Godfather", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 8?", correctAnswer: true),
        QuizQuestion(image: "The_Dark_Knight", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 9?", correctAnswer: true),
        QuizQuestion(image: "Kill_Bill", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 7?", correctAnswer: true),
        QuizQuestion(image: "The_Avengers", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 6?", correctAnswer: true),
        QuizQuestion(image: "Deadpool", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 7?", correctAnswer: true),
        QuizQuestion(image: "The_Green_Knight", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 6?", correctAnswer: true),
        QuizQuestion(image: "Old", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 6?", correctAnswer: false),
        QuizQuestion(image: "The_Ice_Age_Adventures", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 5?", correctAnswer: false),
        QuizQuestion(image: "Tesla", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 5?", correctAnswer: false),
        QuizQuestion(image: "Vivarium", text: "–†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ —Ñ–∏–ª—å–º–∞\n–±–æ–ª—å—à–µ —á–µ–º 6?", correctAnswer: false)
    ]

    weak var delegate: QuestionFactoryDelegate?
    private var askedQuestionsIndexes: Set<Int> = [] // ‚úÖ –•—Ä–∞–Ω–∏–º —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã

    init(delegate: QuestionFactoryDelegate?) {
        self.delegate = delegate
    }

    func requestNextQuestion() {
        print("üîÑ –ó–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞...")

        // ‚úÖ –ï—Å–ª–∏ —É–∂–µ –∑–∞–¥–∞–ª–∏ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        if askedQuestionsIndexes.count == questions.count {
            print("‚ôªÔ∏è –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –±—ã–ª–∏ –∑–∞–¥–∞–Ω—ã! –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ.")
            askedQuestionsIndexes.removeAll()
        }

        // ‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å, –ø–æ–∫–∞ –æ–Ω –Ω–µ –±—É–¥–µ—Ç –Ω–æ–≤—ã–º
        var newIndex: Int
        repeat {
            newIndex = (0..<questions.count).randomElement()!
        } while askedQuestionsIndexes.contains(newIndex)

        askedQuestionsIndexes.insert(newIndex) // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö
        let question = questions[newIndex]

        print("‚úÖ –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –≤—ã–±—Ä–∞–Ω: \(question.text)")
        delegate?.didReceiveNextQuestion(question: question)
    }
}
